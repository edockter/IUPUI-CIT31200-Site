
# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 1.0.{build}

# you can use {branch} name in version format too
# version: 1.0.{build}-{branch}

# branches to build
branches:
  # whitelist
  only:
    - master
    - dev

  # blacklist
  #except:
    

# Do not build on tags (GitHub and BitBucket)
skip_tags: true

# Start builds on tags only (GitHub and BitBucket)
skip_non_tags: true

# Do not build feature branch with open Pull Requests
skip_branch_with_pr: true

# Maximum number of concurrent jobs for the project
max_jobs: 1

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2015

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input
  - echo appveyor.yml read
  # enable RDP 
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))


# fetch repository as zip archive
shallow_clone: false                 # default is "false"

# set clone depth
clone_depth: 5                      # clone entire repository history if not defined

# setting up etc\hosts file
# TODO this for rabbitMQ, DBserver
# hosts:
#  queue-server: 127.0.0.1
#  db.server.com: 127.0.0.2

# environment variables
#
environment:
  iis_port: 52762 #testing -- same port as my localmachine

#  # this is how to set encrypted variable. Go to "Encrypt data" page in account menu to encrypt data.
#  my_secure_var1:
#    secure: FW3tJ3fMncxvs58/ifSP7w==

# environment:
#  global:
#    connection_string: server=12;password=13;
#    service_url: https://127.0.0.1:8090
#
#  matrix:
#  - db: mysql
#    provider: mysql
#
#  - db: mssql
#    provider: mssql
#    password:
#      secure: $#(JFDA)jQ@#$

# this is how to allow failing jobs in the matrix
matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.
  allow_failures:
    - platform: All
      configuration: Debug

# build cache to preserve files/folders between builds
cache:
  - packages -> **\*\packages.config  # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified
  - projectA\libs
  #- node_modules                    # local npm modules
  - '%LocalAppData%\NuGet\Cache'

# enable service required for build/tests
services:
  - mssql2008r2sp2      # start SQL Server 2008 R2 SP2 Express
  - mssql2008r2sp2rs    # start SQL Server 2008 R2 SP2 Express and Reporting Services
  - iis                 # start IIS
  #- msmq                # start Queuing services
  - rabbitmq

# scripts that run after cloning repository
install:
  # by default, all script lines are interpreted as batch
  #- echo This is batch
  # to run script as a PowerShell command prepend it with ps:
  #- ps: Write-Host 'This is PowerShell'
  # batch commands start from cmd:
  #- cmd: echo This is batch again
  #- cmd: set MY_VAR=12345

  # enable HTTP proxy for external connections
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-http-proxy.ps1'))

  # enable desktop for Selenium screenshots
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-desktop.ps1'))

# enable patching of AssemblyInfo.* files
assembly_info:
  patch: true
  file: AssemblyInfo.*
  assembly_version: "2.2.{build}"
  assembly_file_version: "{version}"
  assembly_informational_version: "{version}"


# Automatically register private account and/or project AppVeyor NuGet feeds.
nuget:
  account_feed: true
  project_feed: true
  disable_publish_on_pr: true     # disable publishing of .nupkg artifacts to
                                  # account/project feeds for pull request builds

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: Any CPU

# to add several platforms to build matrix:
#platform:
#  - x86
#  - Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration:
 - IntegrationTest
 - Prod
 - Release

# to add several configurations to build matrix:
# configuration:
#   - Debug
#   - Release
#   - Production

build:
  parallel: true                  # enable MSBuild parallel builds
  project: TechWorks.sln		      # path to Visual Studio solution or project
  publish_wap: true               # package Web Application Projects (WAP) for Web Deploy
  publish_wap_xcopy: true         # package Web Application Projects (WAP) for XCopy deployment
  publish_azure: true             # package Azure Cloud Service projects and push to artifacts
  publish_nuget: true             # package projects with .nuspec files and push to artifacts
  publish_nuget_symbols: true     # generate and publish NuGet symbol packages
  include_nuget_references: true  # add -IncludeReferencedProjects option while packaging NuGet artifacts

  # MSBuild verbosity level
  verbosity: minimal


# scripts to run before build
before_build: 
  - cmd: choco install rabbitmq --ignoredependencies -y
         nuget restore TechWorks.sln

#---------------------------------#
#       tests configuration       #
#---------------------------------#

test:
  assemblies:
  # use IntegrationTest config for tests -- has connection strings for local DB
    - '**\Commworks.Tests\bin\IntegrationTest\Commworks.Test.dll'

  categories:
    - Selenium    

after_build:
  # Load SQL schema to local DB
  - cmd: sqlcmd -S (local)\SQL2008R2SP2 -i -U sa -P Password12! %APPVEYOR_BUILD_FOLDER%\Commworks.Tests\db\tw_schema.sql
  # Start IIS in path 
  - cmd: cd C:\Program Files\IIS Express
  - cmd: start /wait iisexpress /path:%APPVEYOR_BUILD_FOLDER%/Commworks.TechWorks.WebUI /port:%iis_port% -PassThru
  - cmd: echo "Running IIS on port %iis_port% - Path %APPVEYOR_BUILD_FOLDER% ..."

# to run tests from different categories as separate jobs in parallel
#test:
#  categories:
#    - A            # A category common for all jobs
#    - [UI]         # 1st job
#    - [DAL, BL]    # 2nd job

# scripts to run before tests
before_test:
  # Load SQL schema to local DB
  - cmd: sqlcmd -S (local)\SQL2008R2SP2 -i -U sa -P Password12! %APPVEYOR_BUILD_FOLDER%\Commworks.Tests\db\tw_schema.sql
  # Start IIS in path 
  - cmd: cd C:\Program Files\IIS Express
  - cmd: start /wait iisexpress /path:%APPVEYOR_BUILD_FOLDER%/Commworks.TechWorks.WebUI /port:%iis_port% -PassThru
  - cmd: echo "Running IIS on port %iis_port% - Path %APPVEYOR_BUILD_FOLDER% ..."

# scripts to run after tests
after_test:
  - ps: .\take-screenshot.ps1

# get all screenshots and add to artifact
on_finish:
  - ps: Get-ChildItem .\*.png -Recurse | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }


# to run your custom scripts instead of automatic tests
# test_script:

#  - echo This is my custom test script

# to disable automatic tests
#test: off


#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:  
  # pushing a single file with environment variable in path and "Deployment name" specified
  - path: $(APPVEYOR_BUILD_FOLDER)\Commworks.TechWorks.WebUI\bin\
    name: TechWorks.WebUI

  # pushing entire folder as a zip archive
  - path: logs
    name: logs
  # pushing all *.nupkg files in build directory recursively
  # - path: '**\*.nupkg'


#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# providers: Local, FTP, WebDeploy, AzureCS, AzureBlob, S3, NuGet, Environment
# provider names are case-sensitive!
#deploy:
#
#    # FTP deployment provider settings
#  - provider: FTP
#    protocol: ftp|ftps|sftp
#    host: ftp.myserver.com
#    username: admin
#    password:
#      secure: eYKZKFkkEvFYWX6NfjZIVw==
#    folder:
#    application:
#    active_mode: false
#    beta: true      # enable alternative FTP library for 'ftp' and 'ftps' modes
#    debug: true     # show complete FTP log
#
#    # Amazon S3 deployment provider settings
#  - provider: S3
#    access_key_id:
#      secure: ABcd==
#    secret_access_key:
#      secure: ABcd==
#    bucket: my_bucket
#    folder:
#    artifact:
#    set_public: false
#
#    # Azure Blob storage deployment provider settings
#  - provider: AzureBlob
#    storage_account_name:
#      secure: ABcd==
#    storage_access_key:
#      secure: ABcd==
#    container: my_container
#    folder:
#    artifact:

    # Web Deploy depl
